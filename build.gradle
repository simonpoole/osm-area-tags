
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(group: "com.github.java-json-tools", name: "json-schema-validator", version: "2.2.14");
    }   
}


import com.fasterxml.jackson.databind.JsonNode;
import com.github.fge.jackson.JsonLoader;
import com.github.fge.jsonschema.core.report.ProcessingReport;
import com.github.fge.jsonschema.main.JsonSchema;
import com.github.fge.jsonschema.main.JsonSchemaFactory;

ext {
    schema_file = projectDir.getPath() + "/schema.json"
    data_file = projectDir.getPath() + "/area-tags.json"
}

task validate() {
    inputs.file(schema_file);
    inputs.file(data_file);
    doLast {
        final JsonNode schemaFile = JsonLoader.fromPath(schema_file);
        final JsonNode toValidate = JsonLoader.fromPath(data_file);
        
        final JsonSchemaFactory factory = JsonSchemaFactory.byDefault();
        final JsonSchema schema = factory.getJsonSchema(schemaFile);

        ProcessingReport report = schema.validate(toValidate);
        if (!report.isSuccess()) {
            throw new GradleException(report.toString());
        }
    }
}
validate.group = 'validation'
validate.description = 'Vaidate the json data'